// Panes (custom version of jumbotron)
.pane {
	@extend .jumbotron;

	background: #fff;
	margin-bottom: 0;
	padding-top: $line-height-computed*3;
	padding-bottom: $line-height-computed*3;

	@include mq($until: tablet) {
		// padding-top: $line-height-computed*3;
		padding-bottom: $line-height-computed*4;
	}

	header {
		text-align: center;
		margin-bottom: $line-height-computed*4;
	}

	// Make illustrations responsive
	figure {
		// text-align: center;

		img {
			@include img-responsive();
			margin-left: auto;
		    margin-right: auto;
			margin-bottom: $line-height-computed*2;
		}
	}

	/* Predefined pane heights */
	&.huge {
		min-height: 94%;	/* Fallback for browsers do NOT support vh unit */
		min-height: 94vh;
	}

	&.tall {
		min-height: 86%;	/* Fallback for browsers do NOT support vh unit */
		min-height: 86vh;
	}

	&.medium {
		min-height: 65%;
		min-height: 65vh;
	}

	&.short {
		min-height: 50%;	/* Fallback for browsers do NOT support vh unit */
		min-height: 50vh;
	}

	/* Re-usable classes for 2-column and 3-column layouts */
	&.two-column, &.three-column {
		.column {
			margin-bottom: $line-height-computed*2;
			text-align: center;

			@include mq($until: tablet) {
				&:not(:first-of-type) {
					margin-top: $line-height-computed*2;
				}
			}
		}

		.icon {
			img {
				width: 12em;
			}
		}
	}

	&.three-column {
		.column {
			@include make-sm-column(4);
		}
	}

	&.two-column {
		.column {
			@include make-sm-column(6);
		}
	}

	// Re-usable pane styles
	&.blue {
		background: #373D46;
		color: #fff;
		text-align: center;
	}

	&.blue-grid {
		background: #373D46 url("/images/bgGridBlue.png") repeat;
		color: #fff;
		text-align: center;
	}

	&.green-grid {
		background: #373D46 url("/images/bgGridGreen.png") repeat;
		color: #fff;
		text-align: center;
	}

	&.gradient {
		// Since CSS doesn't let me separate the layered background statements
		// I have to repeat them
		@include mq($until: tablet) {
			background:
				url("/images/section_separator.png") 0px 0px / 180% auto no-repeat,
				linear-gradient(-180deg, #F6F6F6 0%, #E3F5F2 100%),
				#fff;
		}
		@include mq($from: tablet) {
			background:
				url("/images/section_separator.png") 0px 0px / 100% auto no-repeat,
				linear-gradient(-180deg, #F6F6F6 0%, #E3F5F2 100%),
				#fff;
			}
		@include mq($from: wide) {
			background:
				url("/images/section_separator.png") 0px 0px / 50% auto no-repeat,
				linear-gradient(-180deg, #F6F6F6 0%, #E3F5F2 100%),
				#fff;
		}
	}
}

span.avoid-wrap { 
	display:inline-block;
}

.vertical-center {
  display: flex;
  align-items: center;
}

.separator {
	@include mq($until: tablet) {
		background: url("/images/section_separator.png") 0px 0px / 180% auto no-repeat;
	}
	@include mq($from: tablet) {
		background: url("/images/section_separator.png") 0px 0px / 100% auto no-repeat;
	}
	@include mq($from: wide) {
		background: url("/images/section_separator.png") 0px 0px / 50% auto no-repeat;
	}
	border-top: #52BEAC solid 1px;
}

.separator-inverted {
	@include mq($until: tablet) {
		background: url("/images/section_separator_inverted.png") right 0px / 180% auto no-repeat;
	}
	@include mq($from: tablet) {
		background: url("/images/section_separator_inverted.png") right 0px / 100% auto no-repeat;
	}
	@include mq($from: wide) {
		background: url("/images/section_separator_inverted.png") right 0px / 50% auto no-repeat;
	}
	border-top: #52BEAC solid 1px;
}

// Responsive Video Containers
.embed-responsive {
	margin-top: $line-height-computed*2;
	margin-bottom: $line-height-computed*2;
}